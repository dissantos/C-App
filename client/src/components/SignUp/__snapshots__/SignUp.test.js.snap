// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Sign up page 1`] = `
<SignUp>
  <div
    className="SignUp"
  >
    <h2>
      Cadastro
    </h2>
    <ForwardRef(Box)
      sx={
        Object {
          "& .MuiTextField-root": Object {
            "width": "50ch",
          },
          "display": "flex",
          "flexDirection": "column",
        }
      }
    >
      <Styled(div)
        as="div"
        className="MuiBox-root"
        sx={
          Object {
            "& .MuiTextField-root": Object {
              "width": "50ch",
            },
            "display": "flex",
            "flexDirection": "column",
          }
        }
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "unit": "px",
              "up": [Function],
              "values": Object {
                "lg": 1200,
                "md": 900,
                "sm": 600,
                "xl": 1536,
                "xs": 0,
              },
            },
            "components": Object {},
            "direction": "ltr",
            "mixins": Object {
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "palette": Object {
              "action": Object {
                "activatedOpacity": 0.12,
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "disabledOpacity": 0.38,
                "focus": "rgba(0, 0, 0, 0.12)",
                "focusOpacity": 0.12,
                "hover": "rgba(0, 0, 0, 0.04)",
                "hoverOpacity": 0.04,
                "selected": "rgba(0, 0, 0, 0.08)",
                "selectedOpacity": 0.08,
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fff",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#c62828",
                "light": "#ef5350",
                "main": "#d32f2f",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#f5f5f5",
                "A200": "#eeeeee",
                "A400": "#bdbdbd",
                "A700": "#616161",
              },
              "info": Object {
                "contrastText": "#fff",
                "dark": "#01579b",
                "light": "#03a9f4",
                "main": "#0288d1",
              },
              "mode": "light",
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#1565c0",
                "light": "#42a5f5",
                "main": "#1976d2",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#7b1fa2",
                "light": "#ba68c8",
                "main": "#9c27b0",
              },
              "success": Object {
                "contrastText": "#fff",
                "dark": "#1b5e20",
                "light": "#4caf50",
                "main": "#2e7d32",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.6)",
              },
              "tonalOffset": 0.2,
              "warning": Object {
                "contrastText": "#fff",
                "dark": "#e65100",
                "light": "#ff9800",
                "main": "#ed6c02",
              },
            },
            "shadows": Array [
              "none",
              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": [Function],
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.43,
              },
              "button": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightBold": 700,
              "fontWeightLight": 300,
              "fontWeightMedium": 500,
              "fontWeightRegular": 400,
              "h1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 300,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1.167,
              },
              "h2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 300,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1.2,
              },
              "h3": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.167,
              },
              "h4": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 400,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.235,
              },
              "h5": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 400,
                "letterSpacing": "0em",
                "lineHeight": 1.334,
              },
              "h6": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 500,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "htmlFontSize": 16,
              "overline": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 400,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "subtitle1": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 400,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 500,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "speedDial": 1050,
              "tooltip": 1500,
            },
          }
        }
      >
        <Noop />
        <div
          className="MuiBox-root css-1ovdyj2"
        >
          <ForwardRef(TextField)
            InputProps={
              Object {
                "endAdornment": <ForwardRef(InputAdornment)
                  position="end"
                >
                  <Memo />
                </ForwardRef(InputAdornment)>,
              }
            }
            id="user-input"
            label="Usuário"
            margin="normal"
            variant="outlined"
          >
            <MuiTextFieldRoot
              className="MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              margin="normal"
              ownerState={
                Object {
                  "InputProps": Object {
                    "endAdornment": <ForwardRef(InputAdornment)
                      position="end"
                    >
                      <Memo />
                    </ForwardRef(InputAdornment)>,
                  },
                  "autoFocus": false,
                  "color": "primary",
                  "disabled": false,
                  "error": false,
                  "fullWidth": false,
                  "id": "user-input",
                  "label": "Usuário",
                  "margin": "normal",
                  "multiline": false,
                  "required": false,
                  "select": false,
                  "variant": "outlined",
                }
              }
              required={false}
              variant="outlined"
            >
              <Noop />
              <ForwardRef(FormControl)
                className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="normal"
                required={false}
                variant="outlined"
              >
                <MuiFormControlRoot
                  as="div"
                  className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1xj1k15-MuiTextField-root"
                  ownerState={
                    Object {
                      "children": Array [
                        <ForwardRef(InputLabel)
                          htmlFor="user-input"
                          id="user-input-label"
                        >
                          Usuário
                        </ForwardRef(InputLabel)>,
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          endAdornment={
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <Memo />
                            </ForwardRef(InputAdornment)>
                          }
                          fullWidth={false}
                          id="user-input"
                          label={
                            <React.Fragment>
                              Usuário
                            </React.Fragment>
                          }
                          multiline={false}
                        />,
                        undefined,
                      ],
                      "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                      "color": "primary",
                      "component": "div",
                      "disabled": false,
                      "error": false,
                      "fullWidth": false,
                      "hiddenLabel": false,
                      "margin": "normal",
                      "required": false,
                      "size": "medium",
                      "variant": "outlined",
                    }
                  }
                >
                  <Noop />
                  <div
                    className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1rv3ei8-MuiFormControl-root-MuiTextField-root"
                  >
                    <ForwardRef(InputLabel)
                      htmlFor="user-input"
                      id="user-input-label"
                    >
                      <MuiInputLabelRoot
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="user-input"
                        id="user-input-label"
                        ownerState={
                          Object {
                            "children": "Usuário",
                            "disableAnimation": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "htmlFor": "user-input",
                            "id": "user-input-label",
                            "required": false,
                            "shrink": false,
                            "size": "medium",
                            "variant": "outlined",
                          }
                        }
                      >
                        <Noop />
                        <ForwardRef(FormLabel)
                          className="css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="user-input"
                          id="user-input-label"
                        >
                          <MuiFormLabelRoot
                            as="label"
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                            classes={
                              Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              }
                            }
                            data-shrink={false}
                            htmlFor="user-input"
                            id="user-input-label"
                            ownerState={
                              Object {
                                "children": "Usuário",
                                "className": "css-1x92c1k-MuiInputLabel-root",
                                "classes": Object {
                                  "asterisk": "",
                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                },
                                "color": "primary",
                                "component": "label",
                                "data-shrink": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "htmlFor": "user-input",
                                "id": "user-input-label",
                                "required": false,
                              }
                            }
                          >
                            <Noop />
                            <label
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                              data-shrink={false}
                              htmlFor="user-input"
                              id="user-input-label"
                            >
                              Usuário
                            </label>
                          </MuiFormLabelRoot>
                        </ForwardRef(FormLabel)>
                      </MuiInputLabelRoot>
                    </ForwardRef(InputLabel)>
                    <ForwardRef(OutlinedInput)
                      autoFocus={false}
                      endAdornment={
                        <ForwardRef(InputAdornment)
                          position="end"
                        >
                          <Memo />
                        </ForwardRef(InputAdornment)>
                      }
                      fullWidth={false}
                      id="user-input"
                      label={
                        <React.Fragment>
                          Usuário
                        </React.Fragment>
                      }
                      multiline={false}
                    >
                      <ForwardRef(InputBase)
                        autoFocus={false}
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        components={
                          Object {
                            "Input": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-input;",
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-input;",
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                            "Root": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "div",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                          }
                        }
                        endAdornment={
                          <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <Memo />
                          </ForwardRef(InputAdornment)>
                        }
                        fullWidth={false}
                        id="user-input"
                        inputComponent="input"
                        multiline={false}
                        renderSuffix={[Function]}
                        type="text"
                      >
                        <GlobalStyles
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <GlobalStyles
                            defaultTheme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "unit": "px",
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1200,
                                    "md": 900,
                                    "sm": 600,
                                    "xl": 1536,
                                    "xs": 0,
                                  },
                                },
                                "components": Object {},
                                "direction": "ltr",
                                "mixins": Object {
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fff",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c62828",
                                    "light": "#ef5350",
                                    "main": "#d32f2f",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#f5f5f5",
                                    "A200": "#eeeeee",
                                    "A400": "#bdbdbd",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#01579b",
                                    "light": "#03a9f4",
                                    "main": "#0288d1",
                                  },
                                  "mode": "light",
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1565c0",
                                    "light": "#42a5f5",
                                    "main": "#1976d2",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#7b1fa2",
                                    "light": "#ba68c8",
                                    "main": "#9c27b0",
                                  },
                                  "success": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1b5e20",
                                    "light": "#4caf50",
                                    "main": "#2e7d32",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.6)",
                                  },
                                  "tonalOffset": 0.2,
                                  "warning": Object {
                                    "contrastText": "#fff",
                                    "dark": "#e65100",
                                    "light": "#ff9800",
                                    "main": "#ed6c02",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          >
                            <EmotionGlobal
                              styles={
                                Object {
                                  "@keyframes mui-auto-fill": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                  "@keyframes mui-auto-fill-cancel": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                }
                              }
                            />
                          </GlobalStyles>
                        </GlobalStyles>
                        <MuiOutlinedInputRoot
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd"
                          classes={
                            Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          onClick={[Function]}
                          ownerState={
                            Object {
                              "aria-describedby": undefined,
                              "autoComplete": undefined,
                              "autoFocus": false,
                              "classes": Object {
                                "input": "MuiOutlinedInput-input",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              },
                              "color": "primary",
                              "components": Object {
                                "Input": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                                "Root": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "div",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                              },
                              "defaultValue": undefined,
                              "disabled": false,
                              "endAdornment": <ForwardRef(InputAdornment)
                                position="end"
                              >
                                <Memo />
                              </ForwardRef(InputAdornment)>,
                              "error": false,
                              "focused": false,
                              "formControl": Object {
                                "adornedStart": false,
                                "color": "primary",
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "fullWidth": false,
                                "hiddenLabel": false,
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "registerEffect": [Function],
                                "required": false,
                                "setAdornedStart": [Function],
                                "size": "medium",
                                "variant": "outlined",
                              },
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "id": "user-input",
                              "inputComponent": "input",
                              "inputProps": undefined,
                              "inputRef": undefined,
                              "maxRows": undefined,
                              "minRows": undefined,
                              "multiline": false,
                              "name": undefined,
                              "onBlur": undefined,
                              "onChange": undefined,
                              "onFocus": undefined,
                              "placeholder": undefined,
                              "renderSuffix": [Function],
                              "rows": undefined,
                              "size": "medium",
                              "startAdornment": undefined,
                              "type": "text",
                              "value": undefined,
                            }
                          }
                        >
                          <Noop />
                          <div
                            className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd css-o9k5xi-MuiInputBase-root-MuiOutlinedInput-root"
                            onClick={[Function]}
                          >
                            <MuiOutlinedInputInput
                              aria-invalid={false}
                              as="input"
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                              disabled={false}
                              id="user-input"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              ownerState={
                                Object {
                                  "aria-describedby": undefined,
                                  "autoComplete": undefined,
                                  "autoFocus": false,
                                  "classes": Object {
                                    "input": "MuiOutlinedInput-input",
                                    "notchedOutline": null,
                                    "root": "MuiOutlinedInput-root",
                                  },
                                  "color": "primary",
                                  "components": Object {
                                    "Input": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "input",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                    "Root": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "div",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                  },
                                  "defaultValue": undefined,
                                  "disabled": false,
                                  "endAdornment": <ForwardRef(InputAdornment)
                                    position="end"
                                  >
                                    <Memo />
                                  </ForwardRef(InputAdornment)>,
                                  "error": false,
                                  "focused": false,
                                  "formControl": Object {
                                    "adornedStart": false,
                                    "color": "primary",
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "fullWidth": false,
                                    "hiddenLabel": false,
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "registerEffect": [Function],
                                    "required": false,
                                    "setAdornedStart": [Function],
                                    "size": "medium",
                                    "variant": "outlined",
                                  },
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "id": "user-input",
                                  "inputComponent": "input",
                                  "inputProps": undefined,
                                  "inputRef": undefined,
                                  "maxRows": undefined,
                                  "minRows": undefined,
                                  "multiline": false,
                                  "name": undefined,
                                  "onBlur": undefined,
                                  "onChange": undefined,
                                  "onFocus": undefined,
                                  "placeholder": undefined,
                                  "renderSuffix": [Function],
                                  "rows": undefined,
                                  "size": "medium",
                                  "startAdornment": undefined,
                                  "type": "text",
                                  "value": undefined,
                                }
                              }
                              required={false}
                              type="text"
                            >
                              <Noop />
                              <input
                                aria-invalid={false}
                                autoFocus={false}
                                className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                disabled={false}
                                id="user-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                type="text"
                              />
                            </MuiOutlinedInputInput>
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <MuiInputAdornmentRoot
                                as="div"
                                className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                ownerState={
                                  Object {
                                    "children": <Memo />,
                                    "disablePointerEvents": false,
                                    "hiddenLabel": false,
                                    "position": "end",
                                    "size": "medium",
                                    "variant": "outlined",
                                  }
                                }
                              >
                                <Noop />
                                <div
                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                >
                                  <ForwardRef(AccountCircleIcon)>
                                    <ForwardRef(SvgIcon)
                                      data-testid="AccountCircleIcon"
                                    >
                                      <MuiSvgIconRoot
                                        aria-hidden={true}
                                        as="svg"
                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                        data-testid="AccountCircleIcon"
                                        focusable="false"
                                        ownerState={
                                          Object {
                                            "children": <path
                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                            />,
                                            "color": "inherit",
                                            "component": "svg",
                                            "data-testid": "AccountCircleIcon",
                                            "fontSize": "medium",
                                            "viewBox": "0 0 24 24",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                      >
                                        <Noop />
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                          data-testid="AccountCircleIcon"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                          />
                                        </svg>
                                      </MuiSvgIconRoot>
                                    </ForwardRef(SvgIcon)>
                                  </ForwardRef(AccountCircleIcon)>
                                </div>
                              </MuiInputAdornmentRoot>
                            </ForwardRef(InputAdornment)>
                            <MuiOutlinedInputNotchedOutline
                              className="MuiOutlinedInput-notchedOutline"
                              label={
                                <React.Fragment>
                                  Usuário
                                </React.Fragment>
                              }
                              notched={false}
                            >
                              <Noop />
                              <NotchedOutline
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                label={
                                  <React.Fragment>
                                    Usuário
                                  </React.Fragment>
                                }
                                notched={false}
                              >
                                <Styled(fieldset)
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                  ownerState={
                                    Object {
                                      "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                      "label": <React.Fragment>
                                        Usuário
                                      </React.Fragment>,
                                      "notched": false,
                                    }
                                  }
                                >
                                  <Noop />
                                  <fieldset
                                    aria-hidden={true}
                                    className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                  >
                                    <Styled(legend)
                                      ownerState={
                                        Object {
                                          "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                          "label": <React.Fragment>
                                            Usuário
                                          </React.Fragment>,
                                          "notched": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <legend
                                        className="css-173wfxe"
                                      >
                                        <span>
                                          Usuário
                                        </span>
                                      </legend>
                                    </Styled(legend)>
                                  </fieldset>
                                </Styled(fieldset)>
                              </NotchedOutline>
                            </MuiOutlinedInputNotchedOutline>
                          </div>
                        </MuiOutlinedInputRoot>
                      </ForwardRef(InputBase)>
                    </ForwardRef(OutlinedInput)>
                  </div>
                </MuiFormControlRoot>
              </ForwardRef(FormControl)>
            </MuiTextFieldRoot>
          </ForwardRef(TextField)>
          <ForwardRef(TextField)
            InputProps={
              Object {
                "endAdornment": <ForwardRef(InputAdornment)
                  position="end"
                >
                  <Memo />
                </ForwardRef(InputAdornment)>,
              }
            }
            id="email-input"
            label="E-mail"
            margin="normal"
            type="email"
            variant="outlined"
          >
            <MuiTextFieldRoot
              className="MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              margin="normal"
              ownerState={
                Object {
                  "InputProps": Object {
                    "endAdornment": <ForwardRef(InputAdornment)
                      position="end"
                    >
                      <Memo />
                    </ForwardRef(InputAdornment)>,
                  },
                  "autoFocus": false,
                  "color": "primary",
                  "disabled": false,
                  "error": false,
                  "fullWidth": false,
                  "id": "email-input",
                  "label": "E-mail",
                  "margin": "normal",
                  "multiline": false,
                  "required": false,
                  "select": false,
                  "type": "email",
                  "variant": "outlined",
                }
              }
              required={false}
              variant="outlined"
            >
              <Noop />
              <ForwardRef(FormControl)
                className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="normal"
                required={false}
                variant="outlined"
              >
                <MuiFormControlRoot
                  as="div"
                  className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1xj1k15-MuiTextField-root"
                  ownerState={
                    Object {
                      "children": Array [
                        <ForwardRef(InputLabel)
                          htmlFor="email-input"
                          id="email-input-label"
                        >
                          E-mail
                        </ForwardRef(InputLabel)>,
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          endAdornment={
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <Memo />
                            </ForwardRef(InputAdornment)>
                          }
                          fullWidth={false}
                          id="email-input"
                          label={
                            <React.Fragment>
                              E-mail
                            </React.Fragment>
                          }
                          multiline={false}
                          type="email"
                        />,
                        undefined,
                      ],
                      "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                      "color": "primary",
                      "component": "div",
                      "disabled": false,
                      "error": false,
                      "fullWidth": false,
                      "hiddenLabel": false,
                      "margin": "normal",
                      "required": false,
                      "size": "medium",
                      "variant": "outlined",
                    }
                  }
                >
                  <Noop />
                  <div
                    className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1rv3ei8-MuiFormControl-root-MuiTextField-root"
                  >
                    <ForwardRef(InputLabel)
                      htmlFor="email-input"
                      id="email-input-label"
                    >
                      <MuiInputLabelRoot
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="email-input"
                        id="email-input-label"
                        ownerState={
                          Object {
                            "children": "E-mail",
                            "disableAnimation": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "htmlFor": "email-input",
                            "id": "email-input-label",
                            "required": false,
                            "shrink": false,
                            "size": "medium",
                            "variant": "outlined",
                          }
                        }
                      >
                        <Noop />
                        <ForwardRef(FormLabel)
                          className="css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="email-input"
                          id="email-input-label"
                        >
                          <MuiFormLabelRoot
                            as="label"
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                            classes={
                              Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              }
                            }
                            data-shrink={false}
                            htmlFor="email-input"
                            id="email-input-label"
                            ownerState={
                              Object {
                                "children": "E-mail",
                                "className": "css-1x92c1k-MuiInputLabel-root",
                                "classes": Object {
                                  "asterisk": "",
                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                },
                                "color": "primary",
                                "component": "label",
                                "data-shrink": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "htmlFor": "email-input",
                                "id": "email-input-label",
                                "required": false,
                              }
                            }
                          >
                            <Noop />
                            <label
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                              data-shrink={false}
                              htmlFor="email-input"
                              id="email-input-label"
                            >
                              E-mail
                            </label>
                          </MuiFormLabelRoot>
                        </ForwardRef(FormLabel)>
                      </MuiInputLabelRoot>
                    </ForwardRef(InputLabel)>
                    <ForwardRef(OutlinedInput)
                      autoFocus={false}
                      endAdornment={
                        <ForwardRef(InputAdornment)
                          position="end"
                        >
                          <Memo />
                        </ForwardRef(InputAdornment)>
                      }
                      fullWidth={false}
                      id="email-input"
                      label={
                        <React.Fragment>
                          E-mail
                        </React.Fragment>
                      }
                      multiline={false}
                      type="email"
                    >
                      <ForwardRef(InputBase)
                        autoFocus={false}
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        components={
                          Object {
                            "Input": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-input;",
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-input;",
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                            "Root": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "div",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                          }
                        }
                        endAdornment={
                          <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <Memo />
                          </ForwardRef(InputAdornment)>
                        }
                        fullWidth={false}
                        id="email-input"
                        inputComponent="input"
                        multiline={false}
                        renderSuffix={[Function]}
                        type="email"
                      >
                        <GlobalStyles
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <GlobalStyles
                            defaultTheme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "unit": "px",
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1200,
                                    "md": 900,
                                    "sm": 600,
                                    "xl": 1536,
                                    "xs": 0,
                                  },
                                },
                                "components": Object {},
                                "direction": "ltr",
                                "mixins": Object {
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fff",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c62828",
                                    "light": "#ef5350",
                                    "main": "#d32f2f",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#f5f5f5",
                                    "A200": "#eeeeee",
                                    "A400": "#bdbdbd",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#01579b",
                                    "light": "#03a9f4",
                                    "main": "#0288d1",
                                  },
                                  "mode": "light",
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1565c0",
                                    "light": "#42a5f5",
                                    "main": "#1976d2",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#7b1fa2",
                                    "light": "#ba68c8",
                                    "main": "#9c27b0",
                                  },
                                  "success": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1b5e20",
                                    "light": "#4caf50",
                                    "main": "#2e7d32",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.6)",
                                  },
                                  "tonalOffset": 0.2,
                                  "warning": Object {
                                    "contrastText": "#fff",
                                    "dark": "#e65100",
                                    "light": "#ff9800",
                                    "main": "#ed6c02",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          >
                            <EmotionGlobal
                              styles={
                                Object {
                                  "@keyframes mui-auto-fill": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                  "@keyframes mui-auto-fill-cancel": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                }
                              }
                            />
                          </GlobalStyles>
                        </GlobalStyles>
                        <MuiOutlinedInputRoot
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd"
                          classes={
                            Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          onClick={[Function]}
                          ownerState={
                            Object {
                              "aria-describedby": undefined,
                              "autoComplete": undefined,
                              "autoFocus": false,
                              "classes": Object {
                                "input": "MuiOutlinedInput-input",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              },
                              "color": "primary",
                              "components": Object {
                                "Input": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                                "Root": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "div",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                              },
                              "defaultValue": undefined,
                              "disabled": false,
                              "endAdornment": <ForwardRef(InputAdornment)
                                position="end"
                              >
                                <Memo />
                              </ForwardRef(InputAdornment)>,
                              "error": false,
                              "focused": false,
                              "formControl": Object {
                                "adornedStart": false,
                                "color": "primary",
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "fullWidth": false,
                                "hiddenLabel": false,
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "registerEffect": [Function],
                                "required": false,
                                "setAdornedStart": [Function],
                                "size": "medium",
                                "variant": "outlined",
                              },
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "id": "email-input",
                              "inputComponent": "input",
                              "inputProps": undefined,
                              "inputRef": undefined,
                              "maxRows": undefined,
                              "minRows": undefined,
                              "multiline": false,
                              "name": undefined,
                              "onBlur": undefined,
                              "onChange": undefined,
                              "onFocus": undefined,
                              "placeholder": undefined,
                              "renderSuffix": [Function],
                              "rows": undefined,
                              "size": "medium",
                              "startAdornment": undefined,
                              "type": "email",
                              "value": undefined,
                            }
                          }
                        >
                          <Noop />
                          <div
                            className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd css-o9k5xi-MuiInputBase-root-MuiOutlinedInput-root"
                            onClick={[Function]}
                          >
                            <MuiOutlinedInputInput
                              aria-invalid={false}
                              as="input"
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                              disabled={false}
                              id="email-input"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              ownerState={
                                Object {
                                  "aria-describedby": undefined,
                                  "autoComplete": undefined,
                                  "autoFocus": false,
                                  "classes": Object {
                                    "input": "MuiOutlinedInput-input",
                                    "notchedOutline": null,
                                    "root": "MuiOutlinedInput-root",
                                  },
                                  "color": "primary",
                                  "components": Object {
                                    "Input": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "input",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                    "Root": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "div",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                  },
                                  "defaultValue": undefined,
                                  "disabled": false,
                                  "endAdornment": <ForwardRef(InputAdornment)
                                    position="end"
                                  >
                                    <Memo />
                                  </ForwardRef(InputAdornment)>,
                                  "error": false,
                                  "focused": false,
                                  "formControl": Object {
                                    "adornedStart": false,
                                    "color": "primary",
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "fullWidth": false,
                                    "hiddenLabel": false,
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "registerEffect": [Function],
                                    "required": false,
                                    "setAdornedStart": [Function],
                                    "size": "medium",
                                    "variant": "outlined",
                                  },
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "id": "email-input",
                                  "inputComponent": "input",
                                  "inputProps": undefined,
                                  "inputRef": undefined,
                                  "maxRows": undefined,
                                  "minRows": undefined,
                                  "multiline": false,
                                  "name": undefined,
                                  "onBlur": undefined,
                                  "onChange": undefined,
                                  "onFocus": undefined,
                                  "placeholder": undefined,
                                  "renderSuffix": [Function],
                                  "rows": undefined,
                                  "size": "medium",
                                  "startAdornment": undefined,
                                  "type": "email",
                                  "value": undefined,
                                }
                              }
                              required={false}
                              type="email"
                            >
                              <Noop />
                              <input
                                aria-invalid={false}
                                autoFocus={false}
                                className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                disabled={false}
                                id="email-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                type="email"
                              />
                            </MuiOutlinedInputInput>
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <MuiInputAdornmentRoot
                                as="div"
                                className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                ownerState={
                                  Object {
                                    "children": <Memo />,
                                    "disablePointerEvents": false,
                                    "hiddenLabel": false,
                                    "position": "end",
                                    "size": "medium",
                                    "variant": "outlined",
                                  }
                                }
                              >
                                <Noop />
                                <div
                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                >
                                  <ForwardRef(AlternateEmailIcon)>
                                    <ForwardRef(SvgIcon)
                                      data-testid="AlternateEmailIcon"
                                    >
                                      <MuiSvgIconRoot
                                        aria-hidden={true}
                                        as="svg"
                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                        data-testid="AlternateEmailIcon"
                                        focusable="false"
                                        ownerState={
                                          Object {
                                            "children": <path
                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10h5v-2h-5c-4.34 0-8-3.66-8-8s3.66-8 8-8 8 3.66 8 8v1.43c0 .79-.71 1.57-1.5 1.57s-1.5-.78-1.5-1.57V12c0-2.76-2.24-5-5-5s-5 2.24-5 5 2.24 5 5 5c1.38 0 2.64-.56 3.54-1.47.65.89 1.77 1.47 2.96 1.47 1.97 0 3.5-1.6 3.5-3.57V12c0-5.52-4.48-10-10-10zm0 13c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
                                            />,
                                            "color": "inherit",
                                            "component": "svg",
                                            "data-testid": "AlternateEmailIcon",
                                            "fontSize": "medium",
                                            "viewBox": "0 0 24 24",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                      >
                                        <Noop />
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                          data-testid="AlternateEmailIcon"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10h5v-2h-5c-4.34 0-8-3.66-8-8s3.66-8 8-8 8 3.66 8 8v1.43c0 .79-.71 1.57-1.5 1.57s-1.5-.78-1.5-1.57V12c0-2.76-2.24-5-5-5s-5 2.24-5 5 2.24 5 5 5c1.38 0 2.64-.56 3.54-1.47.65.89 1.77 1.47 2.96 1.47 1.97 0 3.5-1.6 3.5-3.57V12c0-5.52-4.48-10-10-10zm0 13c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
                                          />
                                        </svg>
                                      </MuiSvgIconRoot>
                                    </ForwardRef(SvgIcon)>
                                  </ForwardRef(AlternateEmailIcon)>
                                </div>
                              </MuiInputAdornmentRoot>
                            </ForwardRef(InputAdornment)>
                            <MuiOutlinedInputNotchedOutline
                              className="MuiOutlinedInput-notchedOutline"
                              label={
                                <React.Fragment>
                                  E-mail
                                </React.Fragment>
                              }
                              notched={false}
                            >
                              <Noop />
                              <NotchedOutline
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                label={
                                  <React.Fragment>
                                    E-mail
                                  </React.Fragment>
                                }
                                notched={false}
                              >
                                <Styled(fieldset)
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                  ownerState={
                                    Object {
                                      "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                      "label": <React.Fragment>
                                        E-mail
                                      </React.Fragment>,
                                      "notched": false,
                                    }
                                  }
                                >
                                  <Noop />
                                  <fieldset
                                    aria-hidden={true}
                                    className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                  >
                                    <Styled(legend)
                                      ownerState={
                                        Object {
                                          "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                          "label": <React.Fragment>
                                            E-mail
                                          </React.Fragment>,
                                          "notched": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <legend
                                        className="css-173wfxe"
                                      >
                                        <span>
                                          E-mail
                                        </span>
                                      </legend>
                                    </Styled(legend)>
                                  </fieldset>
                                </Styled(fieldset)>
                              </NotchedOutline>
                            </MuiOutlinedInputNotchedOutline>
                          </div>
                        </MuiOutlinedInputRoot>
                      </ForwardRef(InputBase)>
                    </ForwardRef(OutlinedInput)>
                  </div>
                </MuiFormControlRoot>
              </ForwardRef(FormControl)>
            </MuiTextFieldRoot>
          </ForwardRef(TextField)>
          <ForwardRef(TextField)
            InputProps={
              Object {
                "endAdornment": <ForwardRef(InputAdornment)
                  position="end"
                >
                  <ForwardRef(IconButton)
                    aria-label="toggle password visibility"
                    edge="end"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <Memo />
                  </ForwardRef(IconButton)>
                </ForwardRef(InputAdornment)>,
              }
            }
            id="password-input"
            label="Senha"
            margin="normal"
            onChange={[Function]}
            type="password"
            value=""
            variant="outlined"
          >
            <MuiTextFieldRoot
              className="MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              margin="normal"
              ownerState={
                Object {
                  "InputProps": Object {
                    "endAdornment": <ForwardRef(InputAdornment)
                      position="end"
                    >
                      <ForwardRef(IconButton)
                        aria-label="toggle password visibility"
                        edge="end"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                      >
                        <Memo />
                      </ForwardRef(IconButton)>
                    </ForwardRef(InputAdornment)>,
                  },
                  "autoFocus": false,
                  "color": "primary",
                  "disabled": false,
                  "error": false,
                  "fullWidth": false,
                  "id": "password-input",
                  "label": "Senha",
                  "margin": "normal",
                  "multiline": false,
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "password",
                  "value": "",
                  "variant": "outlined",
                }
              }
              required={false}
              variant="outlined"
            >
              <Noop />
              <ForwardRef(FormControl)
                className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="normal"
                required={false}
                variant="outlined"
              >
                <MuiFormControlRoot
                  as="div"
                  className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1xj1k15-MuiTextField-root"
                  ownerState={
                    Object {
                      "children": Array [
                        <ForwardRef(InputLabel)
                          htmlFor="password-input"
                          id="password-input-label"
                        >
                          Senha
                        </ForwardRef(InputLabel)>,
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          endAdornment={
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <ForwardRef(IconButton)
                                aria-label="toggle password visibility"
                                edge="end"
                                onClick={[Function]}
                                onMouseDown={[Function]}
                              >
                                <Memo />
                              </ForwardRef(IconButton)>
                            </ForwardRef(InputAdornment)>
                          }
                          fullWidth={false}
                          id="password-input"
                          label={
                            <React.Fragment>
                              Senha
                            </React.Fragment>
                          }
                          multiline={false}
                          onChange={[Function]}
                          type="password"
                          value=""
                        />,
                        undefined,
                      ],
                      "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                      "color": "primary",
                      "component": "div",
                      "disabled": false,
                      "error": false,
                      "fullWidth": false,
                      "hiddenLabel": false,
                      "margin": "normal",
                      "required": false,
                      "size": "medium",
                      "variant": "outlined",
                    }
                  }
                >
                  <Noop />
                  <div
                    className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1rv3ei8-MuiFormControl-root-MuiTextField-root"
                  >
                    <ForwardRef(InputLabel)
                      htmlFor="password-input"
                      id="password-input-label"
                    >
                      <MuiInputLabelRoot
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="password-input"
                        id="password-input-label"
                        ownerState={
                          Object {
                            "children": "Senha",
                            "disableAnimation": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "htmlFor": "password-input",
                            "id": "password-input-label",
                            "required": false,
                            "shrink": false,
                            "size": "medium",
                            "variant": "outlined",
                          }
                        }
                      >
                        <Noop />
                        <ForwardRef(FormLabel)
                          className="css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="password-input"
                          id="password-input-label"
                        >
                          <MuiFormLabelRoot
                            as="label"
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                            classes={
                              Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              }
                            }
                            data-shrink={false}
                            htmlFor="password-input"
                            id="password-input-label"
                            ownerState={
                              Object {
                                "children": "Senha",
                                "className": "css-1x92c1k-MuiInputLabel-root",
                                "classes": Object {
                                  "asterisk": "",
                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                },
                                "color": "primary",
                                "component": "label",
                                "data-shrink": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "htmlFor": "password-input",
                                "id": "password-input-label",
                                "required": false,
                              }
                            }
                          >
                            <Noop />
                            <label
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                              data-shrink={false}
                              htmlFor="password-input"
                              id="password-input-label"
                            >
                              Senha
                            </label>
                          </MuiFormLabelRoot>
                        </ForwardRef(FormLabel)>
                      </MuiInputLabelRoot>
                    </ForwardRef(InputLabel)>
                    <ForwardRef(OutlinedInput)
                      autoFocus={false}
                      endAdornment={
                        <ForwardRef(InputAdornment)
                          position="end"
                        >
                          <ForwardRef(IconButton)
                            aria-label="toggle password visibility"
                            edge="end"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                          >
                            <Memo />
                          </ForwardRef(IconButton)>
                        </ForwardRef(InputAdornment)>
                      }
                      fullWidth={false}
                      id="password-input"
                      label={
                        <React.Fragment>
                          Senha
                        </React.Fragment>
                      }
                      multiline={false}
                      onChange={[Function]}
                      type="password"
                      value=""
                    >
                      <ForwardRef(InputBase)
                        autoFocus={false}
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        components={
                          Object {
                            "Input": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-input;",
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-input;",
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                            "Root": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "div",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                          }
                        }
                        endAdornment={
                          <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <ForwardRef(IconButton)
                              aria-label="toggle password visibility"
                              edge="end"
                              onClick={[Function]}
                              onMouseDown={[Function]}
                            >
                              <Memo />
                            </ForwardRef(IconButton)>
                          </ForwardRef(InputAdornment)>
                        }
                        fullWidth={false}
                        id="password-input"
                        inputComponent="input"
                        multiline={false}
                        onChange={[Function]}
                        renderSuffix={[Function]}
                        type="password"
                        value=""
                      >
                        <GlobalStyles
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <GlobalStyles
                            defaultTheme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "unit": "px",
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1200,
                                    "md": 900,
                                    "sm": 600,
                                    "xl": 1536,
                                    "xs": 0,
                                  },
                                },
                                "components": Object {},
                                "direction": "ltr",
                                "mixins": Object {
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fff",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c62828",
                                    "light": "#ef5350",
                                    "main": "#d32f2f",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#f5f5f5",
                                    "A200": "#eeeeee",
                                    "A400": "#bdbdbd",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#01579b",
                                    "light": "#03a9f4",
                                    "main": "#0288d1",
                                  },
                                  "mode": "light",
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1565c0",
                                    "light": "#42a5f5",
                                    "main": "#1976d2",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#7b1fa2",
                                    "light": "#ba68c8",
                                    "main": "#9c27b0",
                                  },
                                  "success": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1b5e20",
                                    "light": "#4caf50",
                                    "main": "#2e7d32",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.6)",
                                  },
                                  "tonalOffset": 0.2,
                                  "warning": Object {
                                    "contrastText": "#fff",
                                    "dark": "#e65100",
                                    "light": "#ff9800",
                                    "main": "#ed6c02",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          >
                            <EmotionGlobal
                              styles={
                                Object {
                                  "@keyframes mui-auto-fill": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                  "@keyframes mui-auto-fill-cancel": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                }
                              }
                            />
                          </GlobalStyles>
                        </GlobalStyles>
                        <MuiOutlinedInputRoot
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd"
                          classes={
                            Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          onClick={[Function]}
                          ownerState={
                            Object {
                              "aria-describedby": undefined,
                              "autoComplete": undefined,
                              "autoFocus": false,
                              "classes": Object {
                                "input": "MuiOutlinedInput-input",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              },
                              "color": "primary",
                              "components": Object {
                                "Input": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                                "Root": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "div",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                              },
                              "defaultValue": undefined,
                              "disabled": false,
                              "endAdornment": <ForwardRef(InputAdornment)
                                position="end"
                              >
                                <ForwardRef(IconButton)
                                  aria-label="toggle password visibility"
                                  edge="end"
                                  onClick={[Function]}
                                  onMouseDown={[Function]}
                                >
                                  <Memo />
                                </ForwardRef(IconButton)>
                              </ForwardRef(InputAdornment)>,
                              "error": false,
                              "focused": false,
                              "formControl": Object {
                                "adornedStart": false,
                                "color": "primary",
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "fullWidth": false,
                                "hiddenLabel": false,
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "registerEffect": [Function],
                                "required": false,
                                "setAdornedStart": [Function],
                                "size": "medium",
                                "variant": "outlined",
                              },
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "id": "password-input",
                              "inputComponent": "input",
                              "inputProps": undefined,
                              "inputRef": undefined,
                              "maxRows": undefined,
                              "minRows": undefined,
                              "multiline": false,
                              "name": undefined,
                              "onBlur": undefined,
                              "onChange": [Function],
                              "onFocus": undefined,
                              "placeholder": undefined,
                              "renderSuffix": [Function],
                              "rows": undefined,
                              "size": "medium",
                              "startAdornment": undefined,
                              "type": "password",
                              "value": "",
                            }
                          }
                        >
                          <Noop />
                          <div
                            className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd css-o9k5xi-MuiInputBase-root-MuiOutlinedInput-root"
                            onClick={[Function]}
                          >
                            <MuiOutlinedInputInput
                              aria-invalid={false}
                              as="input"
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                              disabled={false}
                              id="password-input"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              ownerState={
                                Object {
                                  "aria-describedby": undefined,
                                  "autoComplete": undefined,
                                  "autoFocus": false,
                                  "classes": Object {
                                    "input": "MuiOutlinedInput-input",
                                    "notchedOutline": null,
                                    "root": "MuiOutlinedInput-root",
                                  },
                                  "color": "primary",
                                  "components": Object {
                                    "Input": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "input",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                    "Root": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "div",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                  },
                                  "defaultValue": undefined,
                                  "disabled": false,
                                  "endAdornment": <ForwardRef(InputAdornment)
                                    position="end"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="toggle password visibility"
                                      edge="end"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                    >
                                      <Memo />
                                    </ForwardRef(IconButton)>
                                  </ForwardRef(InputAdornment)>,
                                  "error": false,
                                  "focused": false,
                                  "formControl": Object {
                                    "adornedStart": false,
                                    "color": "primary",
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "fullWidth": false,
                                    "hiddenLabel": false,
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "registerEffect": [Function],
                                    "required": false,
                                    "setAdornedStart": [Function],
                                    "size": "medium",
                                    "variant": "outlined",
                                  },
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "id": "password-input",
                                  "inputComponent": "input",
                                  "inputProps": undefined,
                                  "inputRef": undefined,
                                  "maxRows": undefined,
                                  "minRows": undefined,
                                  "multiline": false,
                                  "name": undefined,
                                  "onBlur": undefined,
                                  "onChange": [Function],
                                  "onFocus": undefined,
                                  "placeholder": undefined,
                                  "renderSuffix": [Function],
                                  "rows": undefined,
                                  "size": "medium",
                                  "startAdornment": undefined,
                                  "type": "password",
                                  "value": "",
                                }
                              }
                              required={false}
                              type="password"
                              value=""
                            >
                              <Noop />
                              <input
                                aria-invalid={false}
                                autoFocus={false}
                                className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                disabled={false}
                                id="password-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                type="password"
                                value=""
                              />
                            </MuiOutlinedInputInput>
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <MuiInputAdornmentRoot
                                as="div"
                                className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                ownerState={
                                  Object {
                                    "children": <ForwardRef(IconButton)
                                      aria-label="toggle password visibility"
                                      edge="end"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                    >
                                      <Memo />
                                    </ForwardRef(IconButton)>,
                                    "disablePointerEvents": false,
                                    "hiddenLabel": false,
                                    "position": "end",
                                    "size": "medium",
                                    "variant": "outlined",
                                  }
                                }
                              >
                                <Noop />
                                <div
                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="toggle password visibility"
                                    edge="end"
                                    onClick={[Function]}
                                    onMouseDown={[Function]}
                                  >
                                    <MuiIconButtonRoot
                                      aria-label="toggle password visibility"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      ownerState={
                                        Object {
                                          "aria-label": "toggle password visibility",
                                          "children": <Memo />,
                                          "color": "default",
                                          "disableFocusRipple": false,
                                          "disabled": false,
                                          "edge": "end",
                                          "onClick": [Function],
                                          "onMouseDown": [Function],
                                          "size": "medium",
                                        }
                                      }
                                    >
                                      <Noop />
                                      <ForwardRef(ButtonBase)
                                        aria-label="toggle password visibility"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-do3kej-MuiIconButton-root"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                      >
                                        <MuiButtonBaseRoot
                                          aria-label="toggle password visibility"
                                          as="button"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-do3kej-MuiIconButton-root"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          ownerState={
                                            Object {
                                              "aria-label": "toggle password visibility",
                                              "centerRipple": true,
                                              "children": <Memo />,
                                              "className": "MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-do3kej-MuiIconButton-root",
                                              "component": "button",
                                              "disableRipple": false,
                                              "disableTouchRipple": false,
                                              "disabled": false,
                                              "focusRipple": true,
                                              "focusVisible": false,
                                              "onClick": [Function],
                                              "onMouseDown": [Function],
                                              "tabIndex": 0,
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <Noop />
                                          <button
                                            aria-label="toggle password visibility"
                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-1yq5fb3-MuiButtonBase-root-MuiIconButton-root"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <ForwardRef(VisibilityIcon)>
                                              <ForwardRef(SvgIcon)
                                                data-testid="VisibilityIcon"
                                              >
                                                <MuiSvgIconRoot
                                                  aria-hidden={true}
                                                  as="svg"
                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                  data-testid="VisibilityIcon"
                                                  focusable="false"
                                                  ownerState={
                                                    Object {
                                                      "children": <path
                                                        d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                                                      />,
                                                      "color": "inherit",
                                                      "component": "svg",
                                                      "data-testid": "VisibilityIcon",
                                                      "fontSize": "medium",
                                                      "viewBox": "0 0 24 24",
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <Noop />
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                    data-testid="VisibilityIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                                                    />
                                                  </svg>
                                                </MuiSvgIconRoot>
                                              </ForwardRef(SvgIcon)>
                                            </ForwardRef(VisibilityIcon)>
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                            >
                                              <MuiTouchRippleRoot
                                                className="MuiTouchRipple-root"
                                              >
                                                <Noop />
                                                <span
                                                  className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </MuiTouchRippleRoot>
                                            </ForwardRef(TouchRipple)>
                                          </button>
                                        </MuiButtonBaseRoot>
                                      </ForwardRef(ButtonBase)>
                                    </MuiIconButtonRoot>
                                  </ForwardRef(IconButton)>
                                </div>
                              </MuiInputAdornmentRoot>
                            </ForwardRef(InputAdornment)>
                            <MuiOutlinedInputNotchedOutline
                              className="MuiOutlinedInput-notchedOutline"
                              label={
                                <React.Fragment>
                                  Senha
                                </React.Fragment>
                              }
                              notched={false}
                            >
                              <Noop />
                              <NotchedOutline
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                label={
                                  <React.Fragment>
                                    Senha
                                  </React.Fragment>
                                }
                                notched={false}
                              >
                                <Styled(fieldset)
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                  ownerState={
                                    Object {
                                      "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                      "label": <React.Fragment>
                                        Senha
                                      </React.Fragment>,
                                      "notched": false,
                                    }
                                  }
                                >
                                  <Noop />
                                  <fieldset
                                    aria-hidden={true}
                                    className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                  >
                                    <Styled(legend)
                                      ownerState={
                                        Object {
                                          "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                          "label": <React.Fragment>
                                            Senha
                                          </React.Fragment>,
                                          "notched": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <legend
                                        className="css-173wfxe"
                                      >
                                        <span>
                                          Senha
                                        </span>
                                      </legend>
                                    </Styled(legend)>
                                  </fieldset>
                                </Styled(fieldset)>
                              </NotchedOutline>
                            </MuiOutlinedInputNotchedOutline>
                          </div>
                        </MuiOutlinedInputRoot>
                      </ForwardRef(InputBase)>
                    </ForwardRef(OutlinedInput)>
                  </div>
                </MuiFormControlRoot>
              </ForwardRef(FormControl)>
            </MuiTextFieldRoot>
          </ForwardRef(TextField)>
          <ForwardRef(TextField)
            InputProps={
              Object {
                "endAdornment": <ForwardRef(InputAdornment)
                  position="end"
                >
                  <ForwardRef(IconButton)
                    aria-label="toggle password visibility"
                    edge="end"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <Memo />
                  </ForwardRef(IconButton)>
                </ForwardRef(InputAdornment)>,
              }
            }
            error={false}
            id="confirmPassword-input"
            label="Confirmar Senha"
            margin="normal"
            onChange={[Function]}
            type="password"
            variant="outlined"
          >
            <MuiTextFieldRoot
              className="MuiTextField-root"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              margin="normal"
              ownerState={
                Object {
                  "InputProps": Object {
                    "endAdornment": <ForwardRef(InputAdornment)
                      position="end"
                    >
                      <ForwardRef(IconButton)
                        aria-label="toggle password visibility"
                        edge="end"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                      >
                        <Memo />
                      </ForwardRef(IconButton)>
                    </ForwardRef(InputAdornment)>,
                  },
                  "autoFocus": false,
                  "color": "primary",
                  "disabled": false,
                  "error": false,
                  "fullWidth": false,
                  "id": "confirmPassword-input",
                  "label": "Confirmar Senha",
                  "margin": "normal",
                  "multiline": false,
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "password",
                  "variant": "outlined",
                }
              }
              required={false}
              variant="outlined"
            >
              <Noop />
              <ForwardRef(FormControl)
                className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                margin="normal"
                required={false}
                variant="outlined"
              >
                <MuiFormControlRoot
                  as="div"
                  className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1xj1k15-MuiTextField-root"
                  ownerState={
                    Object {
                      "children": Array [
                        <ForwardRef(InputLabel)
                          htmlFor="confirmPassword-input"
                          id="confirmPassword-input-label"
                        >
                          Confirmar Senha
                        </ForwardRef(InputLabel)>,
                        <ForwardRef(OutlinedInput)
                          autoFocus={false}
                          endAdornment={
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <ForwardRef(IconButton)
                                aria-label="toggle password visibility"
                                edge="end"
                                onClick={[Function]}
                                onMouseDown={[Function]}
                              >
                                <Memo />
                              </ForwardRef(IconButton)>
                            </ForwardRef(InputAdornment)>
                          }
                          fullWidth={false}
                          id="confirmPassword-input"
                          label={
                            <React.Fragment>
                              Confirmar Senha
                            </React.Fragment>
                          }
                          multiline={false}
                          onChange={[Function]}
                          type="password"
                        />,
                        undefined,
                      ],
                      "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                      "color": "primary",
                      "component": "div",
                      "disabled": false,
                      "error": false,
                      "fullWidth": false,
                      "hiddenLabel": false,
                      "margin": "normal",
                      "required": false,
                      "size": "medium",
                      "variant": "outlined",
                    }
                  }
                >
                  <Noop />
                  <div
                    className="MuiFormControl-root MuiFormControl-marginNormal MuiTextField-root css-1rv3ei8-MuiFormControl-root-MuiTextField-root"
                  >
                    <ForwardRef(InputLabel)
                      htmlFor="confirmPassword-input"
                      id="confirmPassword-input-label"
                    >
                      <MuiInputLabelRoot
                        classes={
                          Object {
                            "asterisk": "",
                            "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                          }
                        }
                        data-shrink={false}
                        htmlFor="confirmPassword-input"
                        id="confirmPassword-input-label"
                        ownerState={
                          Object {
                            "children": "Confirmar Senha",
                            "disableAnimation": false,
                            "formControl": Object {
                              "adornedStart": false,
                              "color": "primary",
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "registerEffect": [Function],
                              "required": false,
                              "setAdornedStart": [Function],
                              "size": "medium",
                              "variant": "outlined",
                            },
                            "htmlFor": "confirmPassword-input",
                            "id": "confirmPassword-input-label",
                            "required": false,
                            "shrink": false,
                            "size": "medium",
                            "variant": "outlined",
                          }
                        }
                      >
                        <Noop />
                        <ForwardRef(FormLabel)
                          className="css-1x92c1k-MuiInputLabel-root"
                          classes={
                            Object {
                              "asterisk": "",
                              "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                            }
                          }
                          data-shrink={false}
                          htmlFor="confirmPassword-input"
                          id="confirmPassword-input-label"
                        >
                          <MuiFormLabelRoot
                            as="label"
                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-1x92c1k-MuiInputLabel-root"
                            classes={
                              Object {
                                "asterisk": "",
                                "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                              }
                            }
                            data-shrink={false}
                            htmlFor="confirmPassword-input"
                            id="confirmPassword-input-label"
                            ownerState={
                              Object {
                                "children": "Confirmar Senha",
                                "className": "css-1x92c1k-MuiInputLabel-root",
                                "classes": Object {
                                  "asterisk": "",
                                  "root": "MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined",
                                },
                                "color": "primary",
                                "component": "label",
                                "data-shrink": false,
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "htmlFor": "confirmPassword-input",
                                "id": "confirmPassword-input-label",
                                "required": false,
                              }
                            }
                          >
                            <Noop />
                            <label
                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-root MuiFormLabel-colorPrimary css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root"
                              data-shrink={false}
                              htmlFor="confirmPassword-input"
                              id="confirmPassword-input-label"
                            >
                              Confirmar Senha
                            </label>
                          </MuiFormLabelRoot>
                        </ForwardRef(FormLabel)>
                      </MuiInputLabelRoot>
                    </ForwardRef(InputLabel)>
                    <ForwardRef(OutlinedInput)
                      autoFocus={false}
                      endAdornment={
                        <ForwardRef(InputAdornment)
                          position="end"
                        >
                          <ForwardRef(IconButton)
                            aria-label="toggle password visibility"
                            edge="end"
                            onClick={[Function]}
                            onMouseDown={[Function]}
                          >
                            <Memo />
                          </ForwardRef(IconButton)>
                        </ForwardRef(InputAdornment)>
                      }
                      fullWidth={false}
                      id="confirmPassword-input"
                      label={
                        <React.Fragment>
                          Confirmar Senha
                        </React.Fragment>
                      }
                      multiline={false}
                      onChange={[Function]}
                      type="password"
                    >
                      <ForwardRef(InputBase)
                        autoFocus={false}
                        classes={
                          Object {
                            "input": "MuiOutlinedInput-input",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        components={
                          Object {
                            "Input": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "input",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-input;",
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-input;",
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                            "Root": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "__emotion_base": "div",
                              "__emotion_forwardProp": [Function],
                              "__emotion_real": [Circular],
                              "__emotion_styles": Array [
                                "label:MuiInputBase-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                "label:MuiOutlinedInput-root;",
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                              "defaultProps": undefined,
                              "render": [Function],
                              "withComponent": [Function],
                            },
                          }
                        }
                        endAdornment={
                          <ForwardRef(InputAdornment)
                            position="end"
                          >
                            <ForwardRef(IconButton)
                              aria-label="toggle password visibility"
                              edge="end"
                              onClick={[Function]}
                              onMouseDown={[Function]}
                            >
                              <Memo />
                            </ForwardRef(IconButton)>
                          </ForwardRef(InputAdornment)>
                        }
                        fullWidth={false}
                        id="confirmPassword-input"
                        inputComponent="input"
                        multiline={false}
                        onChange={[Function]}
                        renderSuffix={[Function]}
                        type="password"
                      >
                        <GlobalStyles
                          styles={
                            Object {
                              "@keyframes mui-auto-fill": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                              "@keyframes mui-auto-fill-cancel": Object {
                                "from": Object {
                                  "display": "block",
                                },
                              },
                            }
                          }
                        >
                          <GlobalStyles
                            defaultTheme={
                              Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "only": [Function],
                                  "unit": "px",
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1200,
                                    "md": 900,
                                    "sm": 600,
                                    "xl": 1536,
                                    "xs": 0,
                                  },
                                },
                                "components": Object {},
                                "direction": "ltr",
                                "mixins": Object {
                                  "toolbar": Object {
                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                      "minHeight": 48,
                                    },
                                    "@media (min-width:600px)": Object {
                                      "minHeight": 64,
                                    },
                                    "minHeight": 56,
                                  },
                                },
                                "palette": Object {
                                  "action": Object {
                                    "activatedOpacity": 0.12,
                                    "active": "rgba(0, 0, 0, 0.54)",
                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                    "disabledOpacity": 0.38,
                                    "focus": "rgba(0, 0, 0, 0.12)",
                                    "focusOpacity": 0.12,
                                    "hover": "rgba(0, 0, 0, 0.04)",
                                    "hoverOpacity": 0.04,
                                    "selected": "rgba(0, 0, 0, 0.08)",
                                    "selectedOpacity": 0.08,
                                  },
                                  "augmentColor": [Function],
                                  "background": Object {
                                    "default": "#fff",
                                    "paper": "#fff",
                                  },
                                  "common": Object {
                                    "black": "#000",
                                    "white": "#fff",
                                  },
                                  "contrastThreshold": 3,
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "error": Object {
                                    "contrastText": "#fff",
                                    "dark": "#c62828",
                                    "light": "#ef5350",
                                    "main": "#d32f2f",
                                  },
                                  "getContrastText": [Function],
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#f5f5f5",
                                    "A200": "#eeeeee",
                                    "A400": "#bdbdbd",
                                    "A700": "#616161",
                                  },
                                  "info": Object {
                                    "contrastText": "#fff",
                                    "dark": "#01579b",
                                    "light": "#03a9f4",
                                    "main": "#0288d1",
                                  },
                                  "mode": "light",
                                  "primary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1565c0",
                                    "light": "#42a5f5",
                                    "main": "#1976d2",
                                  },
                                  "secondary": Object {
                                    "contrastText": "#fff",
                                    "dark": "#7b1fa2",
                                    "light": "#ba68c8",
                                    "main": "#9c27b0",
                                  },
                                  "success": Object {
                                    "contrastText": "#fff",
                                    "dark": "#1b5e20",
                                    "light": "#4caf50",
                                    "main": "#2e7d32",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "primary": "rgba(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.6)",
                                  },
                                  "tonalOffset": 0.2,
                                  "warning": Object {
                                    "contrastText": "#fff",
                                    "dark": "#e65100",
                                    "light": "#ff9800",
                                    "main": "#ed6c02",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "shape": Object {
                                  "borderRadius": 4,
                                },
                                "spacing": [Function],
                                "transitions": Object {
                                  "create": [Function],
                                  "duration": Object {
                                    "complex": 375,
                                    "enteringScreen": 225,
                                    "leavingScreen": 195,
                                    "short": 250,
                                    "shorter": 200,
                                    "shortest": 150,
                                    "standard": 300,
                                  },
                                  "easing": Object {
                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                  },
                                  "getAutoHeightDuration": [Function],
                                },
                                "typography": Object {
                                  "body1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.5,
                                  },
                                  "body2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.01071em",
                                    "lineHeight": 1.43,
                                  },
                                  "button": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.02857em",
                                    "lineHeight": 1.75,
                                    "textTransform": "uppercase",
                                  },
                                  "caption": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.03333em",
                                    "lineHeight": 1.66,
                                  },
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": 14,
                                  "fontWeightBold": 700,
                                  "fontWeightLight": 300,
                                  "fontWeightMedium": 500,
                                  "fontWeightRegular": 400,
                                  "h1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "6rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.01562em",
                                    "lineHeight": 1.167,
                                  },
                                  "h2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3.75rem",
                                    "fontWeight": 300,
                                    "letterSpacing": "-0.00833em",
                                    "lineHeight": 1.2,
                                  },
                                  "h3": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "3rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.167,
                                  },
                                  "h4": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "2.125rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00735em",
                                    "lineHeight": 1.235,
                                  },
                                  "h5": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.5rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0em",
                                    "lineHeight": 1.334,
                                  },
                                  "h6": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1.25rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.0075em",
                                    "lineHeight": 1.6,
                                  },
                                  "htmlFontSize": 16,
                                  "overline": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.75rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.08333em",
                                    "lineHeight": 2.66,
                                    "textTransform": "uppercase",
                                  },
                                  "pxToRem": [Function],
                                  "subtitle1": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "1rem",
                                    "fontWeight": 400,
                                    "letterSpacing": "0.00938em",
                                    "lineHeight": 1.75,
                                  },
                                  "subtitle2": Object {
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": "0.875rem",
                                    "fontWeight": 500,
                                    "letterSpacing": "0.00714em",
                                    "lineHeight": 1.57,
                                  },
                                },
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "drawer": 1200,
                                  "mobileStepper": 1000,
                                  "modal": 1300,
                                  "snackbar": 1400,
                                  "speedDial": 1050,
                                  "tooltip": 1500,
                                },
                              }
                            }
                            styles={
                              Object {
                                "@keyframes mui-auto-fill": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                                "@keyframes mui-auto-fill-cancel": Object {
                                  "from": Object {
                                    "display": "block",
                                  },
                                },
                              }
                            }
                          >
                            <EmotionGlobal
                              styles={
                                Object {
                                  "@keyframes mui-auto-fill": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                  "@keyframes mui-auto-fill-cancel": Object {
                                    "from": Object {
                                      "display": "block",
                                    },
                                  },
                                }
                              }
                            />
                          </GlobalStyles>
                        </GlobalStyles>
                        <MuiOutlinedInputRoot
                          className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd"
                          classes={
                            Object {
                              "input": "MuiOutlinedInput-input",
                              "notchedOutline": null,
                              "root": "MuiOutlinedInput-root",
                            }
                          }
                          onClick={[Function]}
                          ownerState={
                            Object {
                              "aria-describedby": undefined,
                              "autoComplete": undefined,
                              "autoFocus": false,
                              "classes": Object {
                                "input": "MuiOutlinedInput-input",
                                "notchedOutline": null,
                                "root": "MuiOutlinedInput-root",
                              },
                              "color": "primary",
                              "components": Object {
                                "Input": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "input",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-input;",
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                                "Root": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "__emotion_base": "div",
                                  "__emotion_forwardProp": [Function],
                                  "__emotion_real": [Circular],
                                  "__emotion_styles": Array [
                                    "label:MuiInputBase-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    "label:MuiOutlinedInput-root;",
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "defaultProps": undefined,
                                  "render": [Function],
                                  "withComponent": [Function],
                                },
                              },
                              "defaultValue": undefined,
                              "disabled": false,
                              "endAdornment": <ForwardRef(InputAdornment)
                                position="end"
                              >
                                <ForwardRef(IconButton)
                                  aria-label="toggle password visibility"
                                  edge="end"
                                  onClick={[Function]}
                                  onMouseDown={[Function]}
                                >
                                  <Memo />
                                </ForwardRef(IconButton)>
                              </ForwardRef(InputAdornment)>,
                              "error": false,
                              "focused": false,
                              "formControl": Object {
                                "adornedStart": false,
                                "color": "primary",
                                "disabled": false,
                                "error": false,
                                "filled": false,
                                "focused": false,
                                "fullWidth": false,
                                "hiddenLabel": false,
                                "onBlur": [Function],
                                "onEmpty": [Function],
                                "onFilled": [Function],
                                "onFocus": [Function],
                                "registerEffect": [Function],
                                "required": false,
                                "setAdornedStart": [Function],
                                "size": "medium",
                                "variant": "outlined",
                              },
                              "fullWidth": false,
                              "hiddenLabel": false,
                              "id": "confirmPassword-input",
                              "inputComponent": "input",
                              "inputProps": undefined,
                              "inputRef": undefined,
                              "maxRows": undefined,
                              "minRows": undefined,
                              "multiline": false,
                              "name": undefined,
                              "onBlur": undefined,
                              "onChange": [Function],
                              "onFocus": undefined,
                              "placeholder": undefined,
                              "renderSuffix": [Function],
                              "rows": undefined,
                              "size": "medium",
                              "startAdornment": undefined,
                              "type": "password",
                              "value": undefined,
                            }
                          }
                        >
                          <Noop />
                          <div
                            className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-formControl MuiInputBase-adornedEnd css-o9k5xi-MuiInputBase-root-MuiOutlinedInput-root"
                            onClick={[Function]}
                          >
                            <MuiOutlinedInputInput
                              aria-invalid={false}
                              as="input"
                              autoFocus={false}
                              className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd"
                              disabled={false}
                              id="confirmPassword-input"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              ownerState={
                                Object {
                                  "aria-describedby": undefined,
                                  "autoComplete": undefined,
                                  "autoFocus": false,
                                  "classes": Object {
                                    "input": "MuiOutlinedInput-input",
                                    "notchedOutline": null,
                                    "root": "MuiOutlinedInput-root",
                                  },
                                  "color": "primary",
                                  "components": Object {
                                    "Input": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "input",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-input;",
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                    "Root": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "__emotion_base": "div",
                                      "__emotion_forwardProp": [Function],
                                      "__emotion_real": [Circular],
                                      "__emotion_styles": Array [
                                        "label:MuiInputBase-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        "label:MuiOutlinedInput-root;",
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "defaultProps": undefined,
                                      "render": [Function],
                                      "withComponent": [Function],
                                    },
                                  },
                                  "defaultValue": undefined,
                                  "disabled": false,
                                  "endAdornment": <ForwardRef(InputAdornment)
                                    position="end"
                                  >
                                    <ForwardRef(IconButton)
                                      aria-label="toggle password visibility"
                                      edge="end"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                    >
                                      <Memo />
                                    </ForwardRef(IconButton)>
                                  </ForwardRef(InputAdornment)>,
                                  "error": false,
                                  "focused": false,
                                  "formControl": Object {
                                    "adornedStart": false,
                                    "color": "primary",
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "fullWidth": false,
                                    "hiddenLabel": false,
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "registerEffect": [Function],
                                    "required": false,
                                    "setAdornedStart": [Function],
                                    "size": "medium",
                                    "variant": "outlined",
                                  },
                                  "fullWidth": false,
                                  "hiddenLabel": false,
                                  "id": "confirmPassword-input",
                                  "inputComponent": "input",
                                  "inputProps": undefined,
                                  "inputRef": undefined,
                                  "maxRows": undefined,
                                  "minRows": undefined,
                                  "multiline": false,
                                  "name": undefined,
                                  "onBlur": undefined,
                                  "onChange": [Function],
                                  "onFocus": undefined,
                                  "placeholder": undefined,
                                  "renderSuffix": [Function],
                                  "rows": undefined,
                                  "size": "medium",
                                  "startAdornment": undefined,
                                  "type": "password",
                                  "value": undefined,
                                }
                              }
                              required={false}
                              type="password"
                            >
                              <Noop />
                              <input
                                aria-invalid={false}
                                autoFocus={false}
                                className="MuiOutlinedInput-input MuiInputBase-input MuiInputBase-inputAdornedEnd css-nxo287-MuiInputBase-input-MuiOutlinedInput-input"
                                disabled={false}
                                id="confirmPassword-input"
                                onAnimationStart={[Function]}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                type="password"
                              />
                            </MuiOutlinedInputInput>
                            <ForwardRef(InputAdornment)
                              position="end"
                            >
                              <MuiInputAdornmentRoot
                                as="div"
                                className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium"
                                ownerState={
                                  Object {
                                    "children": <ForwardRef(IconButton)
                                      aria-label="toggle password visibility"
                                      edge="end"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                    >
                                      <Memo />
                                    </ForwardRef(IconButton)>,
                                    "disablePointerEvents": false,
                                    "hiddenLabel": false,
                                    "position": "end",
                                    "size": "medium",
                                    "variant": "outlined",
                                  }
                                }
                              >
                                <Noop />
                                <div
                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-outlined MuiInputAdornment-sizeMedium css-1laqsz7-MuiInputAdornment-root"
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="toggle password visibility"
                                    edge="end"
                                    onClick={[Function]}
                                    onMouseDown={[Function]}
                                  >
                                    <MuiIconButtonRoot
                                      aria-label="toggle password visibility"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      ownerState={
                                        Object {
                                          "aria-label": "toggle password visibility",
                                          "children": <Memo />,
                                          "color": "default",
                                          "disableFocusRipple": false,
                                          "disabled": false,
                                          "edge": "end",
                                          "onClick": [Function],
                                          "onMouseDown": [Function],
                                          "size": "medium",
                                        }
                                      }
                                    >
                                      <Noop />
                                      <ForwardRef(ButtonBase)
                                        aria-label="toggle password visibility"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-do3kej-MuiIconButton-root"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                      >
                                        <MuiButtonBaseRoot
                                          aria-label="toggle password visibility"
                                          as="button"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-do3kej-MuiIconButton-root"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          ownerState={
                                            Object {
                                              "aria-label": "toggle password visibility",
                                              "centerRipple": true,
                                              "children": <Memo />,
                                              "className": "MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-do3kej-MuiIconButton-root",
                                              "component": "button",
                                              "disableRipple": false,
                                              "disableTouchRipple": false,
                                              "disabled": false,
                                              "focusRipple": true,
                                              "focusVisible": false,
                                              "onClick": [Function],
                                              "onMouseDown": [Function],
                                              "tabIndex": 0,
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <Noop />
                                          <button
                                            aria-label="toggle password visibility"
                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd MuiIconButton-sizeMedium css-1yq5fb3-MuiButtonBase-root-MuiIconButton-root"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <ForwardRef(VisibilityIcon)>
                                              <ForwardRef(SvgIcon)
                                                data-testid="VisibilityIcon"
                                              >
                                                <MuiSvgIconRoot
                                                  aria-hidden={true}
                                                  as="svg"
                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                  data-testid="VisibilityIcon"
                                                  focusable="false"
                                                  ownerState={
                                                    Object {
                                                      "children": <path
                                                        d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                                                      />,
                                                      "color": "inherit",
                                                      "component": "svg",
                                                      "data-testid": "VisibilityIcon",
                                                      "fontSize": "medium",
                                                      "viewBox": "0 0 24 24",
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <Noop />
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                    data-testid="VisibilityIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
                                                    />
                                                  </svg>
                                                </MuiSvgIconRoot>
                                              </ForwardRef(SvgIcon)>
                                            </ForwardRef(VisibilityIcon)>
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                            >
                                              <MuiTouchRippleRoot
                                                className="MuiTouchRipple-root"
                                              >
                                                <Noop />
                                                <span
                                                  className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </MuiTouchRippleRoot>
                                            </ForwardRef(TouchRipple)>
                                          </button>
                                        </MuiButtonBaseRoot>
                                      </ForwardRef(ButtonBase)>
                                    </MuiIconButtonRoot>
                                  </ForwardRef(IconButton)>
                                </div>
                              </MuiInputAdornmentRoot>
                            </ForwardRef(InputAdornment)>
                            <MuiOutlinedInputNotchedOutline
                              className="MuiOutlinedInput-notchedOutline"
                              label={
                                <React.Fragment>
                                  Confirmar Senha
                                </React.Fragment>
                              }
                              notched={false}
                            >
                              <Noop />
                              <NotchedOutline
                                className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                label={
                                  <React.Fragment>
                                    Confirmar Senha
                                  </React.Fragment>
                                }
                                notched={false}
                              >
                                <Styled(fieldset)
                                  aria-hidden={true}
                                  className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                  ownerState={
                                    Object {
                                      "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                      "label": <React.Fragment>
                                        Confirmar Senha
                                      </React.Fragment>,
                                      "notched": false,
                                    }
                                  }
                                >
                                  <Noop />
                                  <fieldset
                                    aria-hidden={true}
                                    className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                  >
                                    <Styled(legend)
                                      ownerState={
                                        Object {
                                          "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                          "label": <React.Fragment>
                                            Confirmar Senha
                                          </React.Fragment>,
                                          "notched": false,
                                        }
                                      }
                                    >
                                      <Noop />
                                      <legend
                                        className="css-173wfxe"
                                      >
                                        <span>
                                          Confirmar Senha
                                        </span>
                                      </legend>
                                    </Styled(legend)>
                                  </fieldset>
                                </Styled(fieldset)>
                              </NotchedOutline>
                            </MuiOutlinedInputNotchedOutline>
                          </div>
                        </MuiOutlinedInputRoot>
                      </ForwardRef(InputBase)>
                    </ForwardRef(OutlinedInput)>
                  </div>
                </MuiFormControlRoot>
              </ForwardRef(FormControl)>
            </MuiTextFieldRoot>
          </ForwardRef(TextField)>
        </div>
      </Styled(div)>
    </ForwardRef(Box)>
    <div>
      <ReactImageUploading
        dataURLKey="data_url"
        onChange={[Function]}
        value={Array []}
      >
        <input
          accept="image/*"
          multiple={false}
          onChange={[Function]}
          style={
            Object {
              "display": "none",
            }
          }
          type="file"
        />
        <div
          className="upload__image-wrapper"
        >
          <ForwardRef(Button)
            color="primary"
            onClick={[Function]}
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            variant="contained"
          >
            <MuiButtonRoot
              className=""
              classes={
                Object {
                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                  "label": "MuiButton-label",
                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName=""
              onClick={[Function]}
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              ownerState={
                Object {
                  "children": "Click or Drop here",
                  "color": "primary",
                  "component": "button",
                  "disableElevation": false,
                  "disableFocusRipple": false,
                  "disabled": false,
                  "fullWidth": false,
                  "onClick": [Function],
                  "onDragEnter": [Function],
                  "onDragLeave": [Function],
                  "onDragOver": [Function],
                  "onDragStart": [Function],
                  "onDrop": [Function],
                  "size": "medium",
                  "type": undefined,
                  "variant": "contained",
                }
              }
            >
              <Noop />
              <ForwardRef(ButtonBase)
                className=" css-1yu95zv-MuiButton-root"
                classes={
                  Object {
                    "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                    "label": "MuiButton-label",
                    "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                    "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName=""
                onClick={[Function]}
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
              >
                <MuiButtonBaseRoot
                  as="button"
                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root  css-1yu95zv-MuiButton-root"
                  classes={
                    Object {
                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                      "label": "MuiButton-label",
                      "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                    }
                  }
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={[Function]}
                  onDragEnter={[Function]}
                  onDragLeave={[Function]}
                  onDragOver={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  ownerState={
                    Object {
                      "centerRipple": false,
                      "children": Array [
                        undefined,
                        "Click or Drop here",
                        undefined,
                      ],
                      "className": " css-1yu95zv-MuiButton-root",
                      "classes": Object {
                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                        "label": "MuiButton-label",
                        "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                      },
                      "component": "button",
                      "disableRipple": false,
                      "disableTouchRipple": false,
                      "disabled": false,
                      "focusRipple": true,
                      "focusVisible": false,
                      "focusVisibleClassName": "",
                      "onClick": [Function],
                      "onDragEnter": [Function],
                      "onDragLeave": [Function],
                      "onDragOver": [Function],
                      "onDragStart": [Function],
                      "onDrop": [Function],
                      "tabIndex": 0,
                      "type": undefined,
                    }
                  }
                  tabIndex={0}
                  type="button"
                >
                  <Noop />
                  <button
                    className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root  css-sghohy-MuiButtonBase-root-MuiButton-root"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    Click or Drop here
                    <ForwardRef(TouchRipple)
                      center={false}
                    >
                      <MuiTouchRippleRoot
                        className="MuiTouchRipple-root"
                      >
                        <Noop />
                        <span
                          className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </MuiTouchRippleRoot>
                    </ForwardRef(TouchRipple)>
                  </button>
                </MuiButtonBaseRoot>
              </ForwardRef(ButtonBase)>
            </MuiButtonRoot>
          </ForwardRef(Button)>
           
          <ForwardRef(Button)
            onClick={[Function]}
          >
            <MuiButtonRoot
              className=""
              classes={
                Object {
                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                  "label": "MuiButton-label",
                  "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                }
              }
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName=""
              onClick={[Function]}
              ownerState={
                Object {
                  "children": "Remove image",
                  "color": "primary",
                  "component": "button",
                  "disableElevation": false,
                  "disableFocusRipple": false,
                  "disabled": false,
                  "fullWidth": false,
                  "onClick": [Function],
                  "size": "medium",
                  "type": undefined,
                  "variant": "text",
                }
              }
            >
              <Noop />
              <ForwardRef(ButtonBase)
                className=" css-w60cv3-MuiButton-root"
                classes={
                  Object {
                    "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                    "label": "MuiButton-label",
                    "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                    "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName=""
                onClick={[Function]}
              >
                <MuiButtonBaseRoot
                  as="button"
                  className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root  css-w60cv3-MuiButton-root"
                  classes={
                    Object {
                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                      "label": "MuiButton-label",
                      "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                    }
                  }
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={[Function]}
                  onDragLeave={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  ownerState={
                    Object {
                      "centerRipple": false,
                      "children": Array [
                        undefined,
                        "Remove image",
                        undefined,
                      ],
                      "className": " css-w60cv3-MuiButton-root",
                      "classes": Object {
                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                        "label": "MuiButton-label",
                        "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                      },
                      "component": "button",
                      "disableRipple": false,
                      "disableTouchRipple": false,
                      "disabled": false,
                      "focusRipple": true,
                      "focusVisible": false,
                      "focusVisibleClassName": "",
                      "onClick": [Function],
                      "tabIndex": 0,
                      "type": undefined,
                    }
                  }
                  tabIndex={0}
                  type="button"
                >
                  <Noop />
                  <button
                    className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root  css-1e6y48t-MuiButtonBase-root-MuiButton-root"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    Remove image
                    <ForwardRef(TouchRipple)
                      center={false}
                    >
                      <MuiTouchRippleRoot
                        className="MuiTouchRipple-root"
                      >
                        <Noop />
                        <span
                          className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            exit={true}
                          />
                        </span>
                      </MuiTouchRippleRoot>
                    </ForwardRef(TouchRipple)>
                  </button>
                </MuiButtonBaseRoot>
              </ForwardRef(ButtonBase)>
            </MuiButtonRoot>
          </ForwardRef(Button)>
        </div>
      </ReactImageUploading>
    </div>
    <div
      className="buttons"
    >
      <ForwardRef(Button)
        variant="contained"
      >
        <MuiButtonRoot
          className=""
          classes={
            Object {
              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
              "label": "MuiButton-label",
              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
            }
          }
          component="button"
          disabled={false}
          focusRipple={true}
          focusVisibleClassName=""
          ownerState={
            Object {
              "children": "Cadastrar",
              "color": "primary",
              "component": "button",
              "disableElevation": false,
              "disableFocusRipple": false,
              "disabled": false,
              "fullWidth": false,
              "size": "medium",
              "type": undefined,
              "variant": "contained",
            }
          }
        >
          <Noop />
          <ForwardRef(ButtonBase)
            className=" css-1yu95zv-MuiButton-root"
            classes={
              Object {
                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                "label": "MuiButton-label",
                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
              }
            }
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName=""
          >
            <MuiButtonBaseRoot
              as="button"
              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root  css-1yu95zv-MuiButton-root"
              classes={
                Object {
                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                  "label": "MuiButton-label",
                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                }
              }
              disabled={false}
              onBlur={[Function]}
              onContextMenu={[Function]}
              onDragLeave={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              ownerState={
                Object {
                  "centerRipple": false,
                  "children": Array [
                    undefined,
                    "Cadastrar",
                    undefined,
                  ],
                  "className": " css-1yu95zv-MuiButton-root",
                  "classes": Object {
                    "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                    "label": "MuiButton-label",
                    "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                    "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                  },
                  "component": "button",
                  "disableRipple": false,
                  "disableTouchRipple": false,
                  "disabled": false,
                  "focusRipple": true,
                  "focusVisible": false,
                  "focusVisibleClassName": "",
                  "tabIndex": 0,
                  "type": undefined,
                }
              }
              tabIndex={0}
              type="button"
            >
              <Noop />
              <button
                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root  css-sghohy-MuiButtonBase-root-MuiButton-root"
                disabled={false}
                onBlur={[Function]}
                onContextMenu={[Function]}
                onDragLeave={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex={0}
                type="button"
              >
                Cadastrar
                <ForwardRef(TouchRipple)
                  center={false}
                >
                  <MuiTouchRippleRoot
                    className="MuiTouchRipple-root"
                  >
                    <Noop />
                    <span
                      className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        component={null}
                        exit={true}
                      />
                    </span>
                  </MuiTouchRippleRoot>
                </ForwardRef(TouchRipple)>
              </button>
            </MuiButtonBaseRoot>
          </ForwardRef(ButtonBase)>
        </MuiButtonRoot>
      </ForwardRef(Button)>
    </div>
  </div>
</SignUp>
`;
